---
title: "The Power of Efficiency"
format: html
editor: visual
---

As we’ve said in the class efficiency is a pivotal component of statistical computing (and data science). In this essay, give an explanation of what that term “efficiency” means in relation to statistical computing and describe some places where you encountered efficiency and understood its importance. Your essay should address the following questions:

-   What is the definition of “efficiency”?

-   What does efficiency look like in statistical computing / data science?

-   What does efficiency allow you to do?

-   Why is efficiency important?

-   Where did you encounter efficiency, and what were some [“a-ha” moments](https://www.merriam-webster.com/dictionary/aha%20moment) you had about efficiency? (For the latter, tie each a-ha moment to an artifact in the portfolio.)

    Efficiency is the most optimal use of resources such as memory and time while preserving the function of the task. Efficiency can also look like a process that produces a robust and practical output that is resistant to change or terminate operations when no longer necessary, which cycles back to preserving processing power. From an ethical standpoint, computing power and data is not always cheap and being able to write efficient code that minimizes the amount of computing power necessary reduces the environmental impact which is often overlooked, especially if you're computing over a cloud.\
    There is a variety of ways efficiency looks in data science. The one comment I think I left the most when doing peer reviews was the need for assigning an object. Knowing when to store things as an object not only reduces the need to call the object name, but also saves storage since the unnecessary objects add up overtime and take up space on your computer that does not need to be taken. When working with smaller data sets, this is not an issue, but if working with a larger data set, the large amount of clutter that builds up in the computing environment does not need to be there will decrease the overall efficiency of the program since not only is there writing to the object but also reading and accessing the information that is stored. Efficiency could also look like writing pipelines that uses function calls appropriately, such as using a semi-join or anti-join to simultaneously filter information from two tables and join the information together. Likewise, just writing functions that are resistant to change in inputs or are vectorized to perform operations on entire columns reduce the lines of code needed and perform without the need to write a loop which tends to have a poor time complexity. Adding function stops to terminate the process if there is an input that fails the test cases also demonstrates efficiency since there is no need to continue using compute power when the output would either be an error or some other undesired output anyways. Efficiency allows me to carry out intensive tasks while maintaining a generally consistent structure in code, which speeds up my thought processes and time it takes to write code whether that's actual time or lines of code necessary as well as the computer's time to run said code that I have written. An example of efficient code that I am proud of is the function demonstrated in R3. Rather than writing a new function, I used a vectorized function that I wrote previous which contained function stops and was able to reuse it since as mentioned before, having a vectorized function means that I can input columns and reduce the runtime of the function. This way, I did not have to rewrite the original function and can avoid redundancy in the same file. \
